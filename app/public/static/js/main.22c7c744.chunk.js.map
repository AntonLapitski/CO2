{"version":3,"sources":["actions/loginForm.js","reducers/loginForm.js","appConfig.js","actions/device.js","actions/datePicker.js","reducers/datePicker.js","actions/mainChart.js","reducers/helpers.js","reducers/mainChart.js","actions/miniChartTemp.js","reducers/miniChartTemp.js","actions/miniChartHumidity.js","reducers/miniChartHumidity.js","actions/miniChartCO2.js","reducers/miniChartCO2.js","actions/miniChartsDemon.js","reducers/index.js","reducers/miniChartsDemon.js","reducers/device.js","components/PrivateRoute/PrivateRoute.js","components/Alert/Alert.js","components/LoginForm/LoginForm.js","pages/Signin/Signin.js","components/Header/Header.js","components/ParamCardHeader/ParamCardHeader.js","components/ParamCardTemp/ParamCardSettings.js","components/CurrentInfoDynamic/CurrentInfoDynamic.js","components/MiniChart/MiniChart.js","components/ParamCardToggle/ParamCardToggle.js","components/ParamCardTemp/chartConfig.js","components/ParamCardTemp/ParamCardTemp.js","components/ParamCardHumidity/ParamCardSettings.js","components/ParamCardHumidity/chartConfig.js","components/ParamCardHumidity/ParamCardHumidity.js","components/ParamCardCO2/chartConfig.js","components/ParamCardCO2/ParamCardCO2.js","actions/miniCharts.js","components/Sidebar/Sidebar.js","actions/getLogsFromTo.js","components/SearchWidget/SearchWidget.js","components/MainChart/mainChartConfig.js","components/ColorPicker/ColorPicker.js","components/ChartLineSettings/ChartLineSettings.js","components/MainChart/MainChart.js","pages/Dashboard/Dashboard.js","pages/Notifications/Notifications.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN_FORM_UPDATE","concat","initialState","deviceId","errors","isLoading","HOST","apiConfig","authUrl","updateMainChartUrl","updateMiniChartsUrl","SET_CURRENT_DEVICE","UPDATE_CURRENT_DEVICE","RESET_CURRENT_DEVICE","DATE_PICKER_UPDATE","from","Date","toISOString","to","ACTION_INIT","ACTION_UPDATE","ACTION_LOADING","ACTION_STOP_LOADING","initChart","payload","chart","lablesAxesX","dataAxesY","data","labels","datasets","update","Object","objectSpread","updateChart","state","deviceLogs","measure","maesure","CHARTS_DEMON_SET","CHARTS_DEMON_DELETE","combineReducers","loginForm","arguments","length","undefined","_ref","type","console","log","miniChartsDemon","clearInterval","device","datePicker","mainChart","temperature","humidity","CO2","axesX","axesY","error","updateMainChart","miniChartTemp","miniChartHumidity","miniChartCO2","connect","props","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","assign","render","Redirect","pathname","location","Alert","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","visible","onDismiss","bind","assertThisInitialized","setState","_this$props","color","text","className","role","onClick","data-dismiss","aria-label","aria-hidden","LoginForm","renderErrors","map","index","components_Alert_Alert","key","handlerInputDeviceId","e","value","target","updateLoginForm","handlerSubmit","preventDefault","findDeviceById","_this$props$loginForm","inpytStyle","onSubmit","htmlFor","id","name","aria-describedby","placeholder","maxLength","onChange","disabled","asyncToGenerator","regenerator_default","mark","_callee","dispatch","formData","response","wrap","_context","prev","next","FormData","append","axios","method","url","sent","localStorage","setItem","JSON","stringify","toConsumableArray","t0","stop","_x","apply","Signin","checkDeviceLocaly","components_LoginForm_LoginForm","parse","getItem","resetCurrentDevice","removeItem","Link","ParamCardHeader","cardName","handleToggle","iconClassName","settings","ParamCardSettings","_Component","inherits","createClass","CurrentInfoDynamic","processingData","processedData","currentValue","arrowStyle","lastValue","different","updateCurrentDynamic","dynamicData","_this$processingData","measureStyle","Audio","play","MiniChart","chartContainerStyle","isExpand","chartId","ParamCardToggle","toggle","toggleAction","arrowStyleUp","arrowStyleDown","config","label","borderColor","borderWidth","pointRadius","options","legend","display","scales","yAxes","gridLines","drawBorder","ticks","xAxes","ParamCardTemp","handlerSettingsToggle","isExpandSettings","handlerParamCardToggle","ctx","document","getElementById","getContext","Chart","_this$state","_this$props$miniChart","ParamCardSettings_ParamCardSettings","ParamCardHeader_ParamCardHeader","components_CurrentInfoDynamic_CurrentInfoDynamic","MiniChart_MiniChart","components_ParamCardToggle_ParamCardToggle","backgroundColor","ParamCardHumidity","ParamCardHumidity_ParamCardSettings_ParamCardSettings","ParamCardCO2","hotUpdateMiniCharts","then","deviceData","TEMP_UPDATE_DATA","HUMIDITY_UPDATE_DATA","CO2_UPDATE_DATA","cO2","Sidebar","runUpdateMiniCharts","deleteDemon","components_ParamCardTemp_ParamCardTemp","components_ParamCardHumidity_ParamCardHumidity","components_ParamCardCO2_ParamCardCO2","setTimeout","setInterval","demon","getLogsFromTo","requestData","fromDate","toDate","catch","SearchWidget","handleSearchButton","startDate","endDate","handleChangeStart","strDate","handleChangeEnd","defaultStartDate","defaultEndDate","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","chartLines","temperatyre","isVisible","ColorPicker","background","colors","handleChangeComplete","hex","colorDidChange","lib","triangle","onChangeComplete","ChartLineSettings","_getPrototypeOf2","_len","args","Array","_key","iconStyles","toggleChartVisible","style","components_ColorPicker_ColorPicker","MainChart","handlerChangeColor","chartType","handlerToggleChartVisible","_this$state2","_chartLines$chartType","hidden","components_ChartLineSettings_ChartLineSettings","Dashboard","components_Header_Header","components_Sidebar_Sidebar","components_SearchWidget_SearchWidget","components_MainChart_MainChart","Notifications","App","BrowserRouter","Switch","PrivateRoute_PrivateRoute","exact","path","Boolean","window","hostname","match","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","react_redux_es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22c7c744.chunk.js","sourcesContent":["const NS = \"LOGIN_FORM\";\nexport const LOGIN_FORM_UPDATE = `${NS}__UPDATE`;\n\nexport const updateLoginForm = (data) => (dispatch) => {\n  const { deviceId, errors } = data;\n  dispatch({\n    type: LOGIN_FORM_UPDATE,\n    payload: {\n      deviceId,\n      errors\n    }\n  });\n};\n","import { LOGIN_FORM_UPDATE } from \"../actions/loginForm\";\n\nconst initialState = {\n  deviceId: \"\",\n  errors: [],\n  isLoading: false\n};\n\nexport const loginForm = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN_FORM_UPDATE:\n      console.log({ ...payload });\n      const { deviceId, errors, isLoading } = payload;\n      return {\n        deviceId,\n        errors,\n        isLoading\n      };\n    default:\n      return state;\n  }\n};\n","const HOST = \"http://mastery.local\";\nconst PORT = 8090;\n\nexport const apiConfig = {\n  authUrl: `${HOST}:${PORT}/auth`,\n  updateMainChartUrl: `${HOST}:${PORT}/contact`,\n  updateMiniChartsUrl: `${HOST}:${PORT}/widget`\n};\n","import axios from \"axios\";\nimport { LOGIN_FORM_UPDATE } from \"./loginForm\";\nimport { apiConfig } from \"../appConfig\";\n\nconst NS = \"CURRENT_DEVICE\";\nexport const SET_CURRENT_DEVICE = `${NS}__SET`;\nexport const UPDATE_CURRENT_DEVICE = `${NS}__UPDATE`;\nexport const RESET_CURRENT_DEVICE = `${NS}__RESET`;\n\nexport const findDeviceById = (id) => async (dispatch) => {\n  dispatch({\n    type: LOGIN_FORM_UPDATE,\n    payload: {\n      deviceId: id,\n      errors: [],\n      isLoading: true\n    }\n  });\n\n  const formData = new FormData();\n  formData.append(\"deviceId\", `${id}`);\n  try {\n    const response = await axios({\n      method: \"post\",\n      url: apiConfig.authUrl,\n      data: formData\n    });\n    console.log(response);\n\n    const { deviceId } = response.data.device;\n    if (deviceId) {\n      localStorage.setItem(\"device\", JSON.stringify(response.data.device));\n      dispatch({\n        type: SET_CURRENT_DEVICE,\n        payload: {\n          deviceId,\n          errors: [],\n          isLoading: false\n        }\n      });\n    } else {\n      dispatch({\n        type: LOGIN_FORM_UPDATE,\n        payload: {\n          deviceId: id,\n          errors: [...response.data.errors],\n          isLoading: false\n        }\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FORM_UPDATE,\n      payload: {\n        deviceId: id,\n        errors: [error],\n        isLoading: false\n      }\n    });\n  }\n};\n\nexport const checkDeviceLocaly = () => (dispatch) => {\n  const device = JSON.parse(localStorage.getItem(\"device\"));\n\n  if (device) {\n    const { deviceId } = device;\n    dispatch({\n      type: SET_CURRENT_DEVICE,\n      payload: {\n        deviceId\n      }\n    });\n  }\n};\n\nexport const setCurrentDevice = (data) => (dispatch) => {\n  localStorage.setItem(\"device\", JSON.stringify(data));\n  const { deviceId } = data;\n  dispatch({\n    type: SET_CURRENT_DEVICE,\n    payload: {\n      deviceId\n    }\n  });\n};\n\nexport const updateCurrentDevice = (data) => (dispatch) => {\n  localStorage.setItem(\"device\", JSON.stringify(data));\n  const { deviceId } = data;\n  dispatch({\n    type: SET_CURRENT_DEVICE,\n    payload: {\n      deviceId\n    }\n  });\n};\n\nexport const resetCurrentDevice = () => (dispatch) => {\n  localStorage.removeItem(\"device\");\n  dispatch({\n    type: RESET_CURRENT_DEVICE,\n    payload: null\n  });\n};\n","const NS = \"DATE_PICKER\";\nexport const DATE_PICKER_UPDATE = `${NS}__UPDATE`;\n\nexport const updateDatePicker = (data) => (dispatch) => {\n  const { from, to } = data;\n  dispatch({\n    type: DATE_PICKER_UPDATE,\n    payload: {\n      from,\n      to\n    }\n  });\n};\n","import { DATE_PICKER_UPDATE } from \"../actions/datePicker\";\n\nconst initialState = {\n  from: new Date(+new Date() - 3600).toISOString(),\n  to: new Date().toISOString()\n};\n\nexport const datePicker = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DATE_PICKER_UPDATE:\n      return {\n        ...payload\n      };\n    default:\n      return state;\n  }\n};\n","const NS = \"MAIN_CHART\";\nexport const ACTION_INIT = `${NS}__INIT`;\nexport const ACTION_UPDATE = `${NS}__UPDATE`;\nexport const ACTION_LOADING = `${NS}__LOADING`;\nexport const ACTION_STOP_LOADING = `${NS}__STOP_LOADING`;\n\nexport const initChart = (chart) => (dispatch) => {\n  dispatch({\n    type: ACTION_INIT,\n    payload: chart\n  });\n};\n\nexport const updateChart = (data) => (dispatch) => {\n  dispatch({\n    type: ACTION_UPDATE,\n    payload: data\n  });\n};\n","export const initChart = (payload) => {\n  const { chart, lablesAxesX, dataAxesY } = payload;\n  chart.data.labels = lablesAxesX;\n  chart.data.datasets[0].data = dataAxesY;\n\n  chart.update();\n  return {\n    ...payload\n  };\n};\n\nexport const updateChart = (state, payload) => {\n  const { chart } = state.chart;\n  const { lablesAxesX, dataAxesY } = payload;\n  chart.data.labels = lablesAxesX;\n  chart.data.datasets[0].data = dataAxesY;\n\n  chart.update();\n  return {\n    chart,\n    ...payload\n  };\n};\n\nexport const updateMainChart = (state, payload) => {\n  const { chart } = state;\n  try {\n    const { temperature, humidity, CO2 } = payload;\n\n    chart.data.labels = temperature.axesX;\n    chart.data.datasets[0].data = temperature.axesY;\n    chart.data.datasets[1].data = humidity.axesY;\n    chart.data.datasets[2].data = CO2.axesY;\n\n    chart.update();\n    return {\n      chart,\n      ...payload,\n      isLoading: false\n    };\n  } catch (error) {\n    return {\n      chart,\n      ...state,\n      isLoading: false\n    };\n  }\n};\n","import {\n  ACTION_INIT,\n  ACTION_LOADING,\n  ACTION_STOP_LOADING,\n  ACTION_UPDATE\n} from \"../actions/mainChart\";\nimport { updateMainChart } from \"./helpers\";\n\nconst initialState = {\n  chart: null,\n  deviceLogs: {},\n  isLoading: false\n};\n\nexport const mainChart = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ACTION_INIT:\n      return {\n        chart: payload,\n        deviceLogs: {},\n        isLoading: false\n      };\n    case ACTION_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case ACTION_STOP_LOADING:\n      return {\n        ...state,\n        isLoading: false\n      };\n    case ACTION_UPDATE:\n      return updateMainChart(state, payload);\n    default:\n      return state;\n  }\n};\n","const NS = \"MINI_CHART_TEMP\";\nexport const ACTION_INIT = `${NS}__INIT`;\nexport const ACTION_UPDATE = `${NS}__UPDATE`;\n\nexport const initChart = (data) => (dispatch) => {\n  const { chart, lablesAxesX, dataAxesY, measure } = data;\n  dispatch({\n    type: ACTION_INIT,\n    payload: {\n      chart,\n      lablesAxesX,\n      dataAxesY,\n      measure\n    }\n  });\n};\n\nexport const updateChart = (data) => (dispatch) => {\n  const { lablesAxesX, dataAxesY, measure } = data;\n  dispatch({\n    type: ACTION_UPDATE,\n    payload: {\n      lablesAxesX,\n      dataAxesY,\n      measure\n    }\n  });\n};\n","import { ACTION_INIT, ACTION_UPDATE } from \"../actions/miniChartTemp\";\nimport { initChart, updateChart } from \"./helpers\";\n\nconst initialState = {\n  chart: null,\n  lablesAxesX: [],\n  dataAxesY: [],\n  measure: \"°C\"\n};\n\nexport const miniChartTemp = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ACTION_INIT:\n      return initChart(payload);\n    case ACTION_UPDATE:\n      return updateChart(state, payload);\n    default:\n      return state;\n  }\n};\n","const NS = \"MINI_CHART_HUMIDITY\";\nexport const ACTION_INIT = `${NS}__INIT`;\nexport const ACTION_UPDATE = `${NS}__UPDATE`;\n\nexport const initChart = (data) => (dispatch) => {\n  const { chart, lablesAxesX, dataAxesY, measure } = data;\n  dispatch({\n    type: ACTION_INIT,\n    payload: {\n      chart,\n      lablesAxesX,\n      dataAxesY,\n      measure\n    }\n  });\n};\n\nexport const updateChart = (data) => (dispatch) => {\n  const { lablesAxesX, dataAxesY, measure } = data;\n  dispatch({\n    type: ACTION_UPDATE,\n    payload: {\n      lablesAxesX,\n      dataAxesY,\n      measure\n    }\n  });\n};\n","import { ACTION_INIT, ACTION_UPDATE } from \"../actions/miniChartHumidity\";\nimport { initChart, updateChart } from \"./helpers\";\n\nconst initialState = {\n  chart: null,\n  lablesAxesX: [],\n  dataAxesY: [],\n  maesure: \"g/m^3\"\n};\n\nexport const miniChartHumidity = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ACTION_INIT:\n      return initChart(payload);\n    case ACTION_UPDATE:\n      return updateChart(state, payload);\n    default:\n      return state;\n  }\n};\n","const NS = \"MINI_CHART_CO2\";\nexport const ACTION_INIT = `${NS}__INIT`;\nexport const ACTION_UPDATE = `${NS}__UPDATE`;\n\nexport const initChart = (data) => (dispatch) => {\n  const { chart, lablesAxesX, dataAxesY, measure } = data;\n  dispatch({\n    type: ACTION_INIT,\n    payload: {\n      chart,\n      lablesAxesX,\n      dataAxesY,\n      measure\n    }\n  });\n};\n\nexport const updateChart = (data) => (dispatch) => {\n  const { lablesAxesX, dataAxesY, measure } = data;\n  dispatch({\n    type: ACTION_UPDATE,\n    payload: {\n      lablesAxesX,\n      dataAxesY,\n      measure\n    }\n  });\n};\n","import { ACTION_INIT, ACTION_UPDATE } from \"../actions/miniChartCO2\";\nimport { initChart, updateChart } from \"./helpers\";\n\nconst initialState = {\n  chart: null,\n  lablesAxesX: [],\n  dataAxesY: [],\n  measure: \"ppm\"\n};\n\nexport const miniChartCO2 = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ACTION_INIT:\n      return initChart(payload);\n    case ACTION_UPDATE:\n      return updateChart(state, payload);\n    default:\n      return state;\n  }\n};\n","const NS = \"MINI_CHARTS_DEMON\";\nexport const CHARTS_DEMON_SET = `${NS}__UPDATE`;\nexport const CHARTS_DEMON_DELETE = `${NS}__DELETE`;\n\nexport const setDemon = (demon) => (dispatch) => {\n  dispatch({\n    type: CHARTS_DEMON_SET,\n    payload: demon\n  });\n};\n\nexport const deleteDemon = (demon) => (dispatch) => {\n  dispatch({\n    type: CHARTS_DEMON_DELETE,\n    payload: demon\n  });\n};\n","import { combineReducers } from \"redux\";\nimport { loginForm } from \"./loginForm\";\nimport { device } from \"./device\";\nimport { datePicker } from \"./datePicker\";\nimport { mainChart } from \"./mainChart\";\nimport { miniChartTemp } from \"./miniChartTemp\";\nimport { miniChartHumidity } from \"./miniChartHumidity\";\nimport { miniChartCO2 } from \"./miniChartCO2\";\nimport { miniChartsDemon } from \"./miniChartsDemon\";\n\nexport default combineReducers({\n  loginForm,\n  miniChartsDemon,\n  device,\n  datePicker,\n  mainChart,\n  miniChartTemp,\n  miniChartHumidity,\n  miniChartCO2\n});\n","import {\n  CHARTS_DEMON_SET,\n  CHARTS_DEMON_DELETE\n} from \"../actions/miniChartsDemon\";\nimport { clearInterval } from \"timers\";\n\nconst initialState = null;\n\nexport const miniChartsDemon = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CHARTS_DEMON_SET:\n      return payload;\n    case CHARTS_DEMON_DELETE:\n      clearInterval(state);\n      return payload;\n    default:\n      return state;\n  }\n};\n","import {\n  SET_CURRENT_DEVICE,\n  UPDATE_CURRENT_DEVICE,\n  RESET_CURRENT_DEVICE\n} from \"../actions/device\";\n\nconst initialState = null;\n\nexport const device = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_CURRENT_DEVICE:\n      return {\n        ...payload\n      };\n    case UPDATE_CURRENT_DEVICE:\n      return {\n        ...payload\n      };\n    case RESET_CURRENT_DEVICE:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction PrivateRoute(props) {\n  const { component: Component, device, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        device ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/signin\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction manStateToProps(state) {\n  const { device } = state;\n  return {\n    device\n  };\n}\n\nexport default connect(\n  manStateToProps,\n  {}\n)(PrivateRoute);\n","import React, { Component } from \"react\";\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true\n    };\n\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  onDismiss() {\n    this.setState({ visible: false });\n  }\n\n  render() {\n    const { color, text } = this.props;\n    const { visible } = this.state;\n    return (\n      <div>\n        {visible ? (\n          <div\n            className={`alert alert-${color} alert-dismissible fade show`}\n            role=\"alert\"\n          >\n            <strong>{text}</strong>\n            <button\n              onClick={this.onDismiss}\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"alert\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Alert;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"../../components/Alert\";\nimport { findDeviceById } from \"../../actions/device\";\nimport { updateLoginForm } from \"../../actions/loginForm\";\n\nclass LoginForm extends Component {\n  state = {\n    deviceId: \"\"\n  };\n\n  renderErrors = (errors = []) => {\n    console.log({ errors });\n\n    return errors.map((error, index) => (\n      <Alert key={index} color={\"danger\"} text={`${error}`} />\n    ));\n  };\n\n  handlerInputDeviceId = (e) => {\n    const { value } = e.target;\n    this.setState({\n      deviceId: value\n    });\n    this.props.updateLoginForm({ value, errors: [] });\n  };\n\n  handlerSubmit = (e) => {\n    e.preventDefault();\n    const { deviceId } = this.state;\n    this.props.findDeviceById(deviceId);\n  };\n\n  render() {\n    const { deviceId } = this.state;\n    const { isLoading, errors } = this.props.loginForm;\n    const inpytStyle =\n      errors.length === 0 ? \"form-control\" : \"form-control  is-invalid\";\n    return (\n      <form onSubmit={this.handlerSubmit} className=\"signin-form\">\n        <div className=\"signin-form__logo\">\n          <i className=\"fa fa-user-circle fa-4x\" aria-hidden=\"true\" />{\" \"}\n        </div>\n        {this.renderErrors(errors)}\n        <div className=\"form-group\">\n          <label htmlFor=\"inputDeviceId\">Entry device id:</label>\n          <input\n            id=\"inputDeviceId\"\n            name=\"deviceId\"\n            type=\"text\"\n            className={`${inpytStyle}`}\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Device id\"\n            maxLength=\"50\"\n            value={deviceId}\n            onChange={this.handlerInputDeviceId}\n          />\n          <div className=\"invalid-feedback\">\n            Please provide a valid device Id\n          </div>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            We'll never share your data\n          </small>\n        </div>\n        <button\n          disabled={isLoading}\n          className=\"btn btn-success col-12\"\n          type=\"submit\"\n        >\n          Search device\n        </button>\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { loginForm } = state;\n  return {\n    loginForm\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { findDeviceById, updateLoginForm }\n)(LoginForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { LoginForm } from \"../../components/LoginForm\";\nimport { checkDeviceLocaly } from \"../../actions/device\";\nimport \"./Signin.css\";\n\nclass Signin extends Component {\n  state = {\n    deviceId: \"\"\n  };\n\n  componentDidMount() {\n    this.props.checkDeviceLocaly();\n  }\n\n  render() {\n    const { device } = this.props;\n    return (\n      <div>\n        {device ? (\n          <Redirect to=\"/dashboard\" />\n        ) : (\n          <div className=\"container signin\">\n            <LoginForm />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { device } = state;\n  return {\n    device\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { checkDeviceLocaly }\n)(Signin);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { resetCurrentDevice } from \"../../actions/device\";\n\nconst Header = (props) => {\n  return (\n    <header>\n      <Link to=\"/dashboard\">\n        <h2 className=\"logo\">Dashboard</h2>\n      </Link>\n      <div className=\"notifications\">\n        <i className=\"fa fa-bell fa-lg\" aria-hidden=\"true\" />\n        <span className=\"notifications_counter\">12</span>\n      </div>\n      <div className=\"user-profile\">\n        <i className=\"fa fa-user-circle fa-2x\" aria-hidden=\"true\" />\n        <div className=\"profile__menu\">\n          <div className=\"profile__menu-item\">\n            <Link to=\"/dashboard\">\n              <i className=\"fa fa-user fa-sm\" aria-hidden=\"true\" /> Profile\n            </Link>\n          </div>\n          <hr className=\"profile__menu-hr\" />\n          <div className=\"profile__menu-item\">\n            <Link to=\"/notifications\">\n              <i className=\"fa fa-envelope\" aria-hidden=\"true\" /> Notifications{\" \"}\n              <span className=\"badge badge-danger\"> 12+</span>\n            </Link>\n          </div>\n          <hr className=\"profile__menu-hr\" />\n          <div className=\"profile__menu-item\">\n            <label onClick={props.resetCurrentDevice}>\n              <i className=\"fa fa-microchip fa-sm\" aria-hidden=\"true\" /> Change\n              device id\n            </label>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default connect(\n  null,\n  { resetCurrentDevice }\n)(Header);\n","import React from \"react\";\n\nfunction ParamCardHeader(props) {\n  const { cardName, handleToggle, iconClassName, settings } = props;\n  return (\n    <div className=\"param-card__header\">\n      <div className=\"param-name\">\n        <i className={iconClassName} aria-hidden=\"true\" />\n        {` ${cardName}`}\n      </div>\n      {settings ? (\n        <i\n          onClick={handleToggle}\n          className=\"fa fa-cog fa-lg\"\n          aria-hidden=\"true\"\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default ParamCardHeader;\n/**\n *      className=\"btn-param-settings\">\n */\n","import React, { Component } from \"react\";\n\nexport class ParamCardSettings extends Component {\n  render() {\n    return (\n      <div onClick={this.props.handleToggle} className=\"param-card__settings\">\n        <button className=\"btn btn-light btn-sm selected\">°C</button>\n        <button className=\"btn btn-light btn-sm\">K</button>\n        <button className=\"btn btn-light btn-sm\">F</button>\n\n        <i className=\"fa fa-times ml-auto\" aria-hidden=\"true\" />\n      </div>\n    );\n  }\n}\n\nexport default ParamCardSettings;\n","import React, { Component } from \"react\";\n\nexport class CurrentInfoDynamic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: \"\",\n      arrowStyle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const processedData = this.processingData();\n    this.updateCurrentDynamic(processedData);\n  }\n\n  processingData = () => {\n    const { data } = this.props;\n    const processedData = {\n      currentValue: \"0\",\n      value: \"N/A\",\n      arrowStyle: \"\"\n    };\n\n    const lastValue = data[data.length - 1];\n    const prevValue = data[data.length - 2];\n    const different = lastValue - prevValue;\n\n    processedData.currentValue = `${lastValue}`;\n    if (different > 0) {\n      processedData.value = ` +${different}`;\n      processedData.arrowStyle = \"fa fa-arrow-up\";\n    } else if (different < 0) {\n      processedData.value = ` ${different}`;\n      processedData.arrowStyle = \"fa fa-arrow-down\";\n    }\n    return processedData;\n  };\n\n  updateCurrentDynamic = (dynamicData) => {\n    const { value, arrowStyle } = dynamicData;\n    this.setState({\n      value,\n      arrowStyle\n    });\n  };\n\n  render() {\n    const { value, arrowStyle, currentValue } = this.processingData();\n    const { measure } = this.props;\n    const measureStyle =\n      measure === \"g/m^3\" || measure === \"ppm\" ? \"measure-sm\" : \"measure-md\";\n\n    return (\n      <div\n        className=\"param-card__current-info\"\n        onClick={() => {\n          new Audio(\"sounds/co2_sound_danger.mp3\").play();\n        }}\n      >\n        <div className=\"current-info__value\">\n          {currentValue}\n          <span className={measureStyle}>{`${measure}`}</span>\n        </div>\n        <div className=\"current-info__dynamic\">\n          <span className=\"dynamic_value\">\n            <i className={arrowStyle} aria-hidden=\"true\" />\n            {`${value}`}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CurrentInfoDynamic;\n","import React from \"react\";\n\nfunction MiniChart(props) {\n  const chartContainerStyle = props.isExpand ? \"\" : \"none\";\n  return (\n    <div className={`${chartContainerStyle} mini-chart__container`}>\n      <canvas id={props.chartId} />\n    </div>\n  );\n}\n\nexport default MiniChart;\n","import React, { Component } from \"react\";\n\nexport class ParamCardToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.arrowStyleUp = \"fa fa-angle-up fa-lg\";\n    this.arrowStyleDown = \"fa fa-angle-down fa-lg\";\n  }\n\n  toggle = () => {\n    console.log(this);\n\n    const { isExpand } = this.props;\n    console.log({ isExpand });\n    this.props.toggleAction();\n  };\n\n  render() {\n    const { isExpand } = this.props;\n    const { arrowStyleUp, arrowStyleDown } = this;\n    return (\n      <div onClick={this.toggle} className=\"param-card_toggle\">\n        <i\n          className={isExpand ? arrowStyleUp : arrowStyleDown}\n          aria-hidden=\"true\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ParamCardToggle;\n","const GlobalOptions = {\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          // min: 13.5,\n          //max: 15.2,\n          display: false\n        }\n      }\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          display: false\n        }\n      }\n    ]\n  }\n};\n\nexport const config = {\n  // The type of chart we want to create\n  type: \"line\",\n\n  // The data for our dataset\n  data: {\n    labels: [],\n    datasets: [\n      {\n        label: \"Temp\",\n        //backgroundColor: \"rgb(236, 183, 7, 0.473)\",\n        //backgroundColor: \"transparent\",\n        borderColor: \"rgb(255, 255, 219)\",\n        data: [],\n        borderWidth: 1,\n        pointRadius: 2\n        //lineTension: 0\n      }\n    ]\n  },\n\n  // Configuration options go here\n  options: GlobalOptions\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Chart } from \"chart.js\";\nimport { ParamCardHeader } from \"../ParamCardHeader\";\nimport { ParamCardSettings } from \"./ParamCardSettings\";\nimport { CurrentInfoDynamic } from \"../CurrentInfoDynamic\";\nimport { MiniChart } from \"../MiniChart\";\nimport { ParamCardToggle } from \"../ParamCardToggle\";\nimport { initChart } from \"../../actions/miniChartTemp\";\nimport { config } from \"./chartConfig\";\n\nclass ParamCardTemp extends Component {\n  constructor(props) {\n    super(props);\n    this.chartId = \"miniChartTemp\";\n\n    this.state = {\n      cardName: \"Temp\",\n      measure: \"°C\",\n      chart: null,\n      isExpandSettings: false,\n      isExpand: false\n    };\n\n    this.handlerParamCardToggle = this.handlerParamCardToggle.bind(this);\n    this.handlerSettingsToggle = this.handlerSettingsToggle.bind(this);\n  }\n\n  componentDidMount() {\n    const ctx = document.getElementById(this.chartId).getContext(\"2d\");\n    const chart = new Chart(ctx, config);\n    this.props.initChart({\n      chart,\n      lablesAxesX: [1, 2, 3, 4, 5],\n      dataAxesY: [1, 1, 1, 1, 1],\n      measure: this.state.measure\n    });\n    this.setState({\n      chart\n    });\n  }\n\n  handlerSettingsToggle = () => {\n    this.setState({\n      isExpandSettings: !this.state.isExpandSettings\n    });\n  };\n\n  handlerParamCardToggle = () => {\n    this.setState({\n      isExpand: !this.state.isExpand\n    });\n  };\n\n  render() {\n    const { isExpandSettings, isExpand, cardName } = this.state;\n    const { measure, dataAxesY } = this.props.miniChartTemp;\n    return (\n      <div className=\"col-md-12 param-card yellow\">\n        {isExpandSettings ? (\n          <ParamCardSettings handleToggle={this.handlerSettingsToggle} />\n        ) : (\n          <div>\n            <ParamCardHeader\n              handleToggle={this.handlerSettingsToggle}\n              cardName={cardName}\n              iconClassName={\"fa fa-thermometer-half fa-sm\"}\n              settings={true}\n            />\n            <CurrentInfoDynamic data={dataAxesY} measure={measure} />{\" \"}\n          </div>\n        )}\n        <MiniChart chartId={this.chartId} isExpand={isExpand} />\n        <ParamCardToggle\n          toggleAction={this.handlerParamCardToggle}\n          isExpand={isExpand}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { miniChartTemp } = state;\n  return {\n    miniChartTemp\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    initChart\n  }\n)(ParamCardTemp);\n","import React, { Component } from \"react\";\n\nexport class ParamCardSettings extends Component {\n  render() {\n    return (\n      <div onClick={this.props.handleToggle} className=\"param-card__settings\">\n        <button className=\"btn btn-light btn-sm selected\">g/m^3</button>\n        <button className=\"btn btn-light btn-sm\">%</button>\n        <i className=\"fa fa-times ml-auto\" aria-hidden=\"true\" />\n      </div>\n    );\n  }\n}\n\nexport default ParamCardSettings;\n","const GlobalOptions = {\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          // min: 13.5,\n          //max: 15.2,\n          display: false\n        }\n      }\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          display: false\n        }\n      }\n    ]\n  }\n};\n\nexport const config = {\n  // The type of chart we want to create\n  type: \"line\",\n\n  // The data for our dataset\n  data: {\n    labels: [],\n    datasets: [\n      {\n        label: \"Humidity\",\n        backgroundColor: \"rgb(51, 185, 219, 0.418)\",\n        //backgroundColor: \"transparent\",\n        borderColor: \"rgb(255, 255, 219)\",\n        data: [],\n        borderWidth: 1,\n        pointRadius: 2\n        //lineTension: 0\n      }\n    ]\n  },\n\n  // Configuration options go here\n  options: GlobalOptions\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Chart } from \"chart.js\";\nimport { ParamCardHeader } from \"../ParamCardHeader\";\nimport { ParamCardSettings } from \"./ParamCardSettings\";\nimport { CurrentInfoDynamic } from \"../CurrentInfoDynamic\";\nimport { MiniChart } from \"../MiniChart\";\nimport { ParamCardToggle } from \"../ParamCardToggle\";\nimport { initChart } from \"../../actions/miniChartHumidity\";\nimport { config } from \"./chartConfig\";\n\nclass ParamCardHumidity extends Component {\n  constructor(props) {\n    super(props);\n    this.chartId = \"miniChartHumidity\";\n\n    this.state = {\n      cardName: \"Humidity\",\n      measure: \"g/m^3\",\n      chart: null,\n      isExpandSettings: false,\n      isExpand: false\n    };\n\n    this.handlerParamCardToggle = this.handlerParamCardToggle.bind(this);\n    this.handlerSettingsToggle = this.handlerSettingsToggle.bind(this);\n  }\n\n  componentDidMount() {\n    const ctx = document.getElementById(this.chartId).getContext(\"2d\");\n    const chart = new Chart(ctx, config);\n    this.props.initChart({\n      chart,\n      lablesAxesX: [1],\n      dataAxesY: [1],\n      measure: this.state.measure\n    });\n    this.setState({\n      chart\n    });\n  }\n\n  handlerSettingsToggle = () => {\n    this.setState({\n      isExpandSettings: !this.state.isExpandSettings\n    });\n  };\n\n  handlerParamCardToggle = () => {\n    this.setState({\n      isExpand: !this.state.isExpand\n    });\n  };\n\n  render() {\n    const { isExpandSettings, isExpand, cardName } = this.state;\n    const { measure, dataAxesY } = this.props.miniChartHumidity;\n    return (\n      <div className=\"col-md-12 param-card blue\">\n        {isExpandSettings ? (\n          <ParamCardSettings handleToggle={this.handlerSettingsToggle} />\n        ) : (\n          <div>\n            <ParamCardHeader\n              handleToggle={this.handlerSettingsToggle}\n              cardName={cardName}\n              iconClassName={\"fa fa-tint fa-sm\"}\n              settings={true}\n            />\n            <CurrentInfoDynamic data={dataAxesY} measure={measure} />{\" \"}\n          </div>\n        )}\n        <MiniChart chartId={this.chartId} isExpand={isExpand} />\n        <ParamCardToggle\n          toggleAction={this.handlerParamCardToggle}\n          isExpand={isExpand}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapToStateProps(state) {\n  const { miniChartHumidity } = state;\n  return {\n    miniChartHumidity\n  };\n}\n\nexport default connect(\n  mapToStateProps,\n  {\n    initChart\n  }\n)(ParamCardHumidity);\n","const GlobalOptions = {\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          // min: 13.5,\n          //max: 15.2,\n          display: false\n        }\n      }\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          display: false\n        }\n      }\n    ]\n  }\n};\n\nexport const config = {\n  // The type of chart we want to create\n  type: \"line\",\n\n  // The data for our dataset\n  data: {\n    labels: [],\n    datasets: [\n      {\n        label: \"CO2\",\n        // backgroundColor: \"rgb(255, 99, 132)\",\n        // backgroundColor: \"rgb(84, 187, 101, 0.589)\",\n        backgroundColor: \"rgb(239, 93, 93, 0.6)\",\n        borderColor: \"rgb(255, 255, 219)\",\n        data: [],\n        borderWidth: 1,\n        pointRadius: 2\n        //lineTension: 0\n      }\n    ]\n  },\n\n  // Configuration options go here\n  options: GlobalOptions\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Chart } from \"chart.js\";\nimport { ParamCardHeader } from \"../ParamCardHeader\";\nimport { CurrentInfoDynamic } from \"../CurrentInfoDynamic\";\nimport { ParamCardToggle } from \"../ParamCardToggle\";\nimport { initChart } from \"../../actions/miniChartCO2\";\nimport { config } from \"./chartConfig\";\n\nclass ParamCardCO2 extends Component {\n  constructor(props) {\n    super(props);\n    this.chartId = \"miniChartCO2\";\n\n    this.state = {\n      cardName: \"CO2\",\n      measure: \"ppm\",\n      chart: null,\n      isExpand: false\n    };\n    this.handlerParamCardToggle = this.handlerParamCardToggle.bind(this);\n  }\n\n  componentDidMount() {\n    const ctx = document.getElementById(this.chartId).getContext(\"2d\");\n    const chart = new Chart(ctx, config);\n    this.props.initChart({\n      chart,\n      lablesAxesX: [1, 2, 3, 4, 5],\n      dataAxesY: [1, 1, 1, 1, 1],\n      measure: this.state.measure\n    });\n    this.setState({\n      chart\n    });\n  }\n\n  handlerParamCardToggle = () => {\n    console.log(\"handlerParamCardToggle\");\n\n    this.setState({\n      isExpand: !this.state.isExpand\n    });\n  };\n\n  render() {\n    const { isExpand, cardName } = this.state;\n    const { measure, dataAxesY } = this.props.miniChartCO2;\n    const chartContainerStyle = isExpand ? \"\" : \"none\";\n    return (\n      <div className=\"col-md-12 param-card upper\">\n        <ParamCardHeader\n          cardName={cardName}\n          iconClassName={\"fa fa-cloud fa-sm\"}\n          handleToggle={this.handlerSettingsToggle}\n          settings={false}\n        />\n        <CurrentInfoDynamic data={dataAxesY} measure={measure} />\n        <div className={`${chartContainerStyle} mini-chart__container`}>\n          <canvas id={this.chartId} />\n        </div>\n        <ParamCardToggle\n          toggleAction={this.handlerParamCardToggle}\n          isExpand={isExpand}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { miniChartCO2 } = state;\n  return {\n    miniChartCO2\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    initChart\n  }\n)(ParamCardCO2);\n","import axios from \"axios\";\nimport { ACTION_UPDATE as TEMP_UPDATE_DATA } from \"./miniChartTemp\";\nimport { ACTION_UPDATE as HUMIDITY_UPDATE_DATA } from \"./miniChartHumidity\";\nimport { ACTION_UPDATE as CO2_UPDATE_DATA } from \"./miniChartCO2\";\nimport { CHARTS_DEMON_SET } from \"./miniChartsDemon\";\nimport { apiConfig } from \"../appConfig\";\nimport { setInterval } from \"timers\";\n\nfunction hotUpdateMiniCharts(deviceId, dispatch) {\n  const formData = new FormData();\n  formData.append(\"deviceId\", `${deviceId}`);\n  axios({\n    method: \"post\",\n    url: apiConfig.updateMiniChartsUrl,\n    data: formData\n  }).then((response) => {\n    console.log({ response });\n    let deviceData = null;\n    try {\n      deviceData = response.data.device.deviceData;\n      dispatch({\n        type: TEMP_UPDATE_DATA,\n        payload: {\n          lablesAxesX: deviceData.temperature.axesX,\n          dataAxesY: deviceData.temperature.axesY,\n          measure: \"°C\"\n        }\n      });\n\n      dispatch({\n        type: HUMIDITY_UPDATE_DATA,\n        payload: {\n          lablesAxesX: deviceData.humidity.axesX,\n          dataAxesY: deviceData.humidity.axesY,\n          measure: \"%\"\n        }\n      });\n\n      dispatch({\n        type: CO2_UPDATE_DATA,\n        payload: {\n          lablesAxesX: deviceData.cO2.axesX,\n          dataAxesY: deviceData.cO2.axesY,\n          measure: \"ppm\"\n        }\n      });\n    } catch (error) {\n      console.log(\"hotUpdateMiniCharts \", { error });\n    }\n  });\n}\n\nexport const runUpdateMiniCharts = (deviceId) => async (dispatch) => {\n  setTimeout(() => {\n    hotUpdateMiniCharts(deviceId, dispatch);\n  }, 10);\n\n  const miniChartsDemon = setInterval(() => {\n    hotUpdateMiniCharts(deviceId, dispatch);\n  }, 15000);\n\n  dispatch({\n    type: CHARTS_DEMON_SET,\n    payload: miniChartsDemon\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ParamCardTemp } from \"../ParamCardTemp\";\nimport { ParamCardHumidity } from \"../ParamCardHumidity\";\nimport { ParamCardCO2 } from \"../ParamCardCO2\";\nimport { runUpdateMiniCharts } from \"../../actions/miniCharts\";\nimport { deleteDemon } from \"../../actions/miniChartsDemon\";\n\nclass Sidebar extends Component {\n  componentDidMount() {\n    const { deviceId } = this.props;\n    this.props.runUpdateMiniCharts(deviceId);\n  }\n\n  componentWillUnmount() {\n    this.props.deleteDemon(this.props.miniChartsDemon);\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-3\">\n        <ParamCardTemp />\n        <ParamCardHumidity />\n        <ParamCardCO2 />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { miniChartsDemon } = state;\n  const { deviceId } = state.device;\n  return {\n    miniChartsDemon,\n    deviceId\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    runUpdateMiniCharts,\n    deleteDemon\n  }\n)(Sidebar);\n","import axios from \"axios\";\nimport { apiConfig } from \"../appConfig\";\nimport {\n  ACTION_LOADING,\n  ACTION_UPDATE,\n  ACTION_STOP_LOADING\n} from \"./mainChart\";\n\nexport const getLogsFromTo = (deviceId, requestData) => (dispatch) => {\n  dispatch({\n    type: ACTION_LOADING\n  });\n\n  const formData = new FormData();\n  formData.append(\"deviceId\", `${deviceId}`);\n\n  if (requestData) {\n    let { fromDate, toDate } = requestData;\n    fromDate = new Date(fromDate).toISOString();\n    toDate = new Date(toDate).toISOString();\n\n    formData.append(\"from\", `${fromDate}`);\n    formData.append(\"to\", `${toDate}`);\n  }\n\n  axios({\n    method: \"post\",\n    url: apiConfig.updateMainChartUrl,\n    data: formData\n  })\n    .then((response) => {\n      const deviceData = response.data.device.deviceData;\n      dispatch({\n        type: ACTION_UPDATE,\n        payload: deviceData\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_STOP_LOADING\n      });\n      console.log({ error });\n    });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getLogsFromTo } from \"../../actions/getLogsFromTo\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport class SearchWidget extends Component {\n  constructor(props) {\n    super(props);\n    const defaultStartDate = new Date();\n    const defaultEndDate = new Date();\n\n    this.state = {\n      startDate: defaultStartDate,\n      endDate: defaultEndDate\n    };\n  }\n\n  handleSearchButton = () => {\n    const { getLogsFromTo, deviceId } = this.props;\n    const { startDate, endDate } = this.state;\n    getLogsFromTo(deviceId, { fromDate: startDate, toDate: endDate });\n  };\n\n  handleChangeStart = (strDate) => {\n    this.setState({\n      startDate: strDate,\n      endDate: strDate\n    });\n  };\n\n  handleChangeEnd = (strDate) => {\n    this.setState({\n      endDate: strDate\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"main-chart__container mb-1\">\n        <div className=\"data-search__container\">\n          <DatePicker\n            selected={this.state.startDate}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            dateFormat=\"yyyy-MM-dd h:mm aa\"\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n            onChange={this.handleChangeStart}\n            className=\"form-control form-control-sm mr-2\"\n            disabled={this.props.isLoading}\n          />\n          <DatePicker\n            selected={this.state.endDate}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            dateFormat=\"yyyy-MM-dd h:mm aa\"\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n            onChange={this.handleChangeEnd}\n            className=\"form-control form-control-sm\"\n            disabled={this.props.isLoading}\n          />\n          <button\n            className=\"btn btn-success btn-sm ml-3\"\n            onClick={this.handleSearchButton}\n            disabled={this.props.isLoading}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { deviceId } = state.device;\n  const { isLoading } = state.mainChart;\n  return {\n    deviceId,\n    isLoading\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getLogsFromTo\n  }\n)(SearchWidget);\n","export const config = {\n  type: \"line\",\n\n  chartLines: {\n    temperatyre: {\n      id: 0,\n      isVisible: true,\n      color: \"#FF6900\"\n    },\n    humidity: {\n      id: 1,\n      isVisible: true,\n      color: \"#0693E3\"\n    },\n    CO2: {\n      id: 2,\n      isVisible: true,\n      color: \"#EB144C\"\n    }\n  },\n\n  data: {\n    labels: [1, 2, 4, 5, 6, 7, 8],\n    datasets: [\n      {\n        label: \"°C\",\n        backgroundColor: \"transparent\",\n        borderColor: \"#FF6900\",\n        data: [3, 3, 3, 3, 3, 3, 3],\n        borderWidth: 2,\n        pointRadius: 2\n        //fill: false\n      },\n      {\n        label: \"Humidity\",\n        backgroundColor: \"transparent\",\n        borderColor: \"#0693E3\",\n        data: [2, 2, 2, 2, 2, 2, 2],\n        borderWidth: 2,\n        pointRadius: 2\n        //fill: false\n      },\n      {\n        label: \"CO2\",\n        backgroundColor: \"transparent\",\n        borderColor: \"#EB144C\",\n        data: [1, 1, 1, 1, 1, 1, 1],\n        borderWidth: 2,\n        pointRadius: 2\n        //fill: false\n      }\n    ]\n  },\n\n  // Configuration options go here\n  options: {\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            // display: false,\n            //drawBorder: false\n          },\n          ticks: {\n            // min: 13.5,\n            //max: 15.2,\n            //display: false\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            //display: false,\n            //drawBorder: false\n          },\n          ticks: {\n            //display: false\n          }\n        }\n      ]\n    }\n  }\n};\n","import React, { Component } from \"react\";\nimport { TwitterPicker } from \"react-color\";\nimport { connect } from \"react-redux\";\n\nclass ColorPicker extends Component {\n  state = {\n    background: \"#fff\",\n    colors: [\n      \"#FF6900\",\n      \"#FCB900\",\n      \"#00D084\",\n      \"#0693E3\",\n      \"#EB144C\",\n      \"#F78DA7\",\n      \"#9900EF\",\n      \"#193193\"\n    ]\n  };\n\n  handleChangeComplete = (color) => {\n    this.setState({ background: color.hex });\n    this.props.colorDidChange(color);\n  };\n\n  render() {\n    return (\n      <TwitterPicker\n        triangle={\"top-right\"}\n        color={this.state.background}\n        colors={this.state.colors}\n        onChangeComplete={this.handleChangeComplete}\n      />\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(ColorPicker);\n","import React, { Component } from \"react\";\nimport { ColorPicker } from \"../ColorPicker\";\n\nexport class ChartLineSettings extends Component {\n  iconStyles = {\n    temperatyre: \"fa fa-thermometer-half fa-lg ml-2\",\n    humidity: \"fa fa-tint ml-2\",\n    CO2: \"fa fa-cloud ml-2\"\n  };\n\n  render() {\n    const {\n      colorDidChange,\n      toggleChartVisible,\n      isVisible,\n      type,\n      color\n    } = this.props;\n\n    return (\n      <div className=\"ml-3 chart-settings__container\">\n        <div className=\"line_settings-color\" style={{ background: color }}>\n          <div className=\"color-picker none\">\n            <ColorPicker\n              colorDidChange={(color) => colorDidChange(color, type)}\n            />\n          </div>\n        </div>\n        <span onClick={() => toggleChartVisible(type)}>\n          {isVisible ? (\n            <i className={this.iconStyles[`${type}`]} aria-hidden=\"true\" />\n          ) : (\n            <i className=\"fa fa-eye-slash ml-2\" aria-hidden=\"true\" />\n          )}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default ChartLineSettings;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Chart } from \"chart.js\";\nimport { initChart } from \"../../actions/mainChart\";\nimport { config } from \"./mainChartConfig\";\nimport { getLogsFromTo } from \"../../actions/getLogsFromTo\";\nimport { ChartLineSettings } from \"../ChartLineSettings\";\n\nexport class MainChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chartId = \"mainChart\";\n\n    this.state = {\n      chart: null,\n      chartLines: config.chartLines\n    };\n\n    this.handlerChangeColor = this.handlerChangeColor.bind(this);\n    this.handlerToggleChartVisible = this.handlerToggleChartVisible.bind(this);\n  }\n\n  componentDidMount() {\n    const ctx = document.getElementById(this.chartId).getContext(\"2d\");\n    const chart = new Chart(ctx, config);\n\n    this.setState({\n      chart\n    });\n\n    this.props.initChart(chart);\n  }\n\n  handlerChangeColor = (color, chartType) => {\n    const { hex } = color;\n    const { chart, chartLines } = this.state;\n    const { id } = chartLines[chartType];\n\n    chart.data.datasets[id].borderColor = hex;\n    chartLines[chartType].color = hex;\n\n    chart.update();\n    this.setState({\n      chartLines\n    });\n  };\n\n  handlerToggleChartVisible = (chartType) => {\n    const { chart, chartLines } = this.state;\n    const { id, isVisible } = chartLines[chartType];\n    if (isVisible) {\n      chart.data.datasets[id].hidden = isVisible;\n      chart.update();\n    } else {\n      chart.data.datasets[id].hidden = isVisible;\n      chart.update();\n    }\n    chartLines[chartType].isVisible = !isVisible;\n    this.setState({\n      chartLines\n    });\n  };\n\n  render() {\n    const { chartLines } = this.state;\n    const { isLoading } = this.props;\n    return (\n      <div>\n        <div className=\"main-chart\">\n          <div className=\"main-chart__container\">\n            {isLoading ? (\n              <div className=\"content_loader\">\n                <i className=\"fas fa-sync fa-2x mr-3\" />\n                <span className=\"content-loader-text\">Loading...</span>\n              </div>\n            ) : null}\n            <div className=\"main-chart__settings\">\n              <ChartLineSettings\n                type=\"temperatyre\"\n                color={chartLines.temperatyre.color}\n                isVisible={chartLines.temperatyre.isVisible}\n                colorDidChange={this.handlerChangeColor}\n                toggleChartVisible={this.handlerToggleChartVisible}\n              />\n              <ChartLineSettings\n                type=\"humidity\"\n                color={chartLines.humidity.color}\n                isVisible={chartLines.humidity.isVisible}\n                colorDidChange={this.handlerChangeColor}\n                toggleChartVisible={this.handlerToggleChartVisible}\n              />\n              <ChartLineSettings\n                type=\"CO2\"\n                color={chartLines.CO2.color}\n                isVisible={chartLines.CO2.isVisible}\n                colorDidChange={this.handlerChangeColor}\n                toggleChartVisible={this.handlerToggleChartVisible}\n              />\n            </div>\n            <canvas id={this.chartId} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { deviceId } = state.device;\n  const { isLoading } = state.mainChart;\n  return {\n    deviceId,\n    isLoading\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    initChart,\n    getLogsFromTo\n  }\n)(MainChart);\n","import React, { Component } from \"react\";\nimport { Header } from \"../../components/Header\";\nimport { Sidebar } from \"../../components/Sidebar\";\nimport { SearchWidget } from \"../../components/SearchWidget\";\nimport { MainChart } from \"../../components/MainChart\";\nimport { connect } from \"react-redux\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <div className=\"row\">\n          <Sidebar />\n          <div className=\"col-md-9\">\n            <SearchWidget />\n            <MainChart />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { deviceId } = state.device;\n  const { isLoading } = state.mainChart;\n  return {\n    deviceId,\n    isLoading\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Dashboard);\n","import React from \"react\";\nimport { Header } from \"../../components/Header\";\nimport { Sidebar } from \"../../components/Sidebar\";\nimport \"./Notifications.css\";\n\nfunction Notifications(props) {\n  const data = new Date();\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"row\">\n        <Sidebar />\n        <div className=\"col-md-9\">\n          <div className=\"notifications-container\">\n            <div\n              className=\"alert alert-warning alert-dismissible fade show\"\n              role=\"alert\"\n            >\n              Temperature was upper norm! {`${data}`}\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div\n              className=\"alert alert-info alert-dismissible fade show\"\n              role=\"alert\"\n            >\n              Temperature was upper norm! {`${data}`}\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div\n              className=\"alert alert-success alert-dismissible fade show\"\n              role=\"alert\"\n            >\n              Temperature was upper norm! {`${data}`}\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Notifications;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport { Signin } from \"./pages/Signin\";\nimport { Dashboard } from \"./pages/Dashboard\";\nimport { Notifications } from \"./pages/Notifications\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n          <PrivateRoute exact path=\"/notifications\" component={Notifications} />\n          <Route component={Signin} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. app is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}